// <auto-generated />
using System;
using CongratulationAPI.Migrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CongratulationAPI.Migrations.Migrations
{
    [DbContext(typeof(MigrationDbContext))]
    [Migration("20220331155437_add_Congratulation_User_From_Id")]
    partial class add_Congratulation_User_From_Id
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CongratulationAPI.Domain.Entities.BirthDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<bool>("IsPased")
                        .HasColumnType("bit");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BirthDay");
                });

            modelBuilder.Entity("CongratulationAPI.Domain.Entities.Congratulation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BirthDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CongratulationText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BirthDayId");

                    b.HasIndex("FromUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Congratulation");
                });

            modelBuilder.Entity("CongratulationAPI.Domain.Entities.Know", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KnowUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromUserId");

                    b.HasIndex("KnowUserId");

                    b.ToTable("Know");
                });

            modelBuilder.Entity("CongratulationAPI.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BirthDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BirthDayId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CongratulationAPI.Domain.Entities.Congratulation", b =>
                {
                    b.HasOne("CongratulationAPI.Domain.Entities.BirthDay", "BirthDay")
                        .WithMany("Congratulations")
                        .HasForeignKey("BirthDayId")
                        .HasConstraintName("FK_BirthDay_Congratulations")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CongratulationAPI.Domain.Entities.User", "FromUser")
                        .WithMany("Congratulations")
                        .HasForeignKey("FromUserId")
                        .HasConstraintName("FK_User_Congratulations_From_")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CongratulationAPI.Domain.Entities.User", "User")
                        .WithMany("MyCongratulations")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_User_Congratulations")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BirthDay");

                    b.Navigation("FromUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CongratulationAPI.Domain.Entities.Know", b =>
                {
                    b.HasOne("CongratulationAPI.Domain.Entities.User", "FromUser")
                        .WithMany("Knows")
                        .HasForeignKey("FromUserId")
                        .HasConstraintName("FK_User_Cnows")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CongratulationAPI.Domain.Entities.User", "KnowUser")
                        .WithMany("KnowsToMe")
                        .HasForeignKey("KnowUserId")
                        .HasConstraintName("FK_User_Knows_")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FromUser");

                    b.Navigation("KnowUser");
                });

            modelBuilder.Entity("CongratulationAPI.Domain.Entities.User", b =>
                {
                    b.HasOne("CongratulationAPI.Domain.Entities.BirthDay", "BirthDay")
                        .WithMany("Users")
                        .HasForeignKey("BirthDayId")
                        .HasConstraintName("FK_BirthDay_Users")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BirthDay");
                });

            modelBuilder.Entity("CongratulationAPI.Domain.Entities.BirthDay", b =>
                {
                    b.Navigation("Congratulations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CongratulationAPI.Domain.Entities.User", b =>
                {
                    b.Navigation("Congratulations");

                    b.Navigation("Knows");

                    b.Navigation("KnowsToMe");

                    b.Navigation("MyCongratulations");
                });
#pragma warning restore 612, 618
        }
    }
}
